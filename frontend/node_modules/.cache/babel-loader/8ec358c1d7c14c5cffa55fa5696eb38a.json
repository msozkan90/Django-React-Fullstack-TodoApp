{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OZCAN\\\\Desktop\\\\frontend\\\\src\\\\pages\\\\Register.jsx\";\nimport Alert from '../Alert';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  const getCookie = name => {\n    var cookieValue = null;\n\n    if (document.cookie && document.cookie !== '') {\n      var cookies = document.cookie.split(';');\n\n      for (var i = 0; i < cookies.length; i++) {\n        var cookie = cookies[i].trim(); // Does this cookie string begin with the name we want?\n\n        if (cookie.substring(0, name.length + 1) === name + '=') {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n\n    return cookieValue;\n  };\n\n  const setAlert = (msg, type) => {\n    this.setState({\n      alert: {\n        msg,\n        type\n      }\n    });\n    setTimeout(() => {\n      this.setState({\n        alert: null\n      });\n    }, 3000);\n  };\n\n  const getUsername = username => {\n    fetch('http://127.0.0.1:8000/account/username_check').then(response => response.json()).then(data => this.setState({\n      all_users: data\n    }));\n    this.checkUsername(username);\n  };\n\n  const checkUsername = username => {\n    let user_name = username;\n    let db_username = this.state.all_users;\n    let that = this;\n    {\n      db_username.map(function (user, index) {\n        if (user.username == user_name) {\n          //console.log(\"burda\")\n          that.setAlert('This username is already taken.', 'danger');\n        }\n      });\n    }\n  };\n\n  const handleUsername = e => {\n    var username = e.target.value;\n    console.log('Username:', username);\n    this.setState({\n      register: { ...this.state.register,\n        username: username\n      }\n    });\n    this.getUsername(username);\n  };\n\n  const handleEmail = e => {\n    var email = e.target.value;\n    console.log('Email:', email);\n    this.setState({\n      register: { ...this.state.register,\n        email: email\n      }\n    });\n  };\n\n  const handlePassword = e => {\n    var password = e.target.value;\n    console.log('Password:', password);\n    this.setState({\n      register: { ...this.state.register,\n        password: password\n      }\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('ITEM:', this.state.register);\n    var csrftoken = this.getCookie('csrftoken');\n    var url = 'http://127.0.0.1:8000/account/register/';\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken\n      },\n      body: JSON.stringify(this.state.login)\n    }).then(response => {\n      console.log(response);\n      this.setState({\n        login: {\n          username: '',\n          email: '',\n          password: ''\n        }\n      });\n    }).catch(function (error) {\n      console.log('ERROR:', error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            action: \"\",\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"id_username\",\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control \",\n                onChange: this.handleUsername,\n                type: \"text\",\n                name: \"username\",\n                maxLength: \"150\",\n                autoFocus: \"\",\n                id: \"id_username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Alert, {\n                alert: this.state.alert\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"id_email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                onChange: this.handleEmail,\n                type: \"email\",\n                name: \"email\",\n                required: \"\",\n                id: \"id_email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"id_password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                onChange: this.handlePassword,\n                type: \"password\",\n                name: \"password\",\n                required: \"\",\n                id: \"id_password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-dark w-100\",\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"]\n  }, void 0, true);\n}\n\n_c = Register;\nexport default Register; // export class Register extends Component {\n//     constructor(props){\n//         super(props);\n//           this.state = {\n//             register:{\n//               username:'',\n//               email:'',\n//               password:'',\n//             },\n//             all_users:[],\n//             alert:null,\n//           }\n//           this.handlePassword = this.handlePassword.bind(this)\n//           this.getUsername = this.getUsername.bind(this)\n//           this.checkUsername = this.checkUsername.bind(this)\n//           this.handleEmail = this.handleEmail.bind(this)\n//           this.handleUsername = this.handleUsername.bind(this)\n//           this.handleSubmit = this.handleSubmit.bind(this)\n//           this.getCookie = this.getCookie.bind(this)\n//           this.setAlert = this.setAlert.bind(this)\n//       };\n//   getCookie(name) {\n//     var cookieValue = null;\n//     if (document.cookie && document.cookie !== '') {\n//         var cookies = document.cookie.split(';');\n//         for (var i = 0; i < cookies.length; i++) {\n//             var cookie = cookies[i].trim();\n//             // Does this cookie string begin with the name we want?\n//             if (cookie.substring(0, name.length + 1) === (name + '=')) {\n//                 cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n//                 break;\n//             }\n//         }\n//     }\n//     return cookieValue;\n// }\n// setAlert(msg, type) {\n//   this.setState({ alert: {msg,type} });\n//   setTimeout(() => {\n//       this.setState({ alert: null });\n//   }, 3000);\n// }\n//   getUsername(username){\n//         fetch('http://127.0.0.1:8000/account/username_check')\n//         .then(response => response.json())\n//         .then(data => \n//               this.setState({\n//               all_users: data  \n//             })\n//         )\n//         this.checkUsername(username)\n//     }\n//     checkUsername(username){\n//       let user_name=username\n//       let db_username=this.state.all_users\n//       let that = this\n//       {db_username.map(function(user, index){\n//         if(user.username == user_name){\n//           //console.log(\"burda\")\n//           that.setAlert('This username is already taken.','danger');\n//         }\n//       })}\n//     }\n//   handleUsername(e){\n//     var username = e.target.value\n//     console.log('Username:', username)\n//     this.setState({\n//         register:{\n//         ...this.state.register,\n//         username:username,\n//       }\n//     })\n//     this.getUsername(username)\n//   }\n//   handleEmail(e){\n//     var email = e.target.value\n//     console.log('Email:', email)\n//     this.setState({\n//         register:{\n//         ...this.state.register,\n//         email:email,\n//       }\n//     })\n//   }\n//   handlePassword(e){\n//     var password = e.target.value\n//     console.log('Password:', password)\n//     this.setState({\n//         register:{\n//         ...this.state.register,\n//         password:password\n//       }\n//     })\n//   }\n//   handleSubmit(e){\n//     e.preventDefault()\n//     console.log('ITEM:', this.state.register)\n//     var csrftoken = this.getCookie('csrftoken')\n//     var url = 'http://127.0.0.1:8000/account/register/'\n//     fetch(url, {\n//       method:'POST',\n//       headers:{\n//         'Content-type':'application/json',\n//         'X-CSRFToken':csrftoken,\n//       },\n//       body:JSON.stringify(this.state.login)\n//     }).then((response)  => {\n//         console.log(response)\n//         this.setState({\n//            login:{\n//           username:'',\n//           email:'', \n//           password:'',\n//         }\n//         })\n//     }).catch(function(error){\n//       console.log('ERROR:', error)\n//     })\n//   }\n//   render() {\n//     return (\n//         <>\n//         <div className=\"container\">\n//           <div className=\"row\">\n//             <div className=\"col-md-3\"></div>\n//             <div className=\"col-md-6\">\n//             <h3>Register</h3>\n//               <form action=\"\" onSubmit={this.handleSubmit}>\n//                 <div className=\"form-group\">\n//                 <label htmlFor=\"id_username\">Username</label>\n//                 <input className=\"form-control \"  onChange={this.handleUsername} type=\"text\" name=\"username\" maxLength=\"150\" autoFocus=\"\"  id=\"id_username\" /> \n//                 < Alert alert= {this.state.alert}/>\n//                 </div>\n//                 <div className=\"form-group\">\n//                 <label htmlFor=\"id_email\">Email</label>\n//                 <input className=\"form-control\"  onChange={this.handleEmail} type=\"email\" name=\"email\" required=\"\" id=\"id_email\" />\n//                 </div>\n//                 <div className=\"form-group\">\n//                 <label htmlFor=\"id_password\">Password</label>\n//                 <input className=\"form-control\"  onChange={this.handlePassword} type=\"password\" name=\"password\" required=\"\" id=\"id_password\" />\n//                 </div>\n//                 <div className=\"form-group\">\n//                 <button className='btn btn-dark w-100'>Register</button>\n//                 </div>\n//               </form>\n//             </div>\n//           </div>\n//         </div>\n//           \n//   </>\n//     )\n//   }\n// }\n// export default Register\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["Alert","React","Register","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","setAlert","msg","type","setState","alert","setTimeout","getUsername","username","fetch","then","response","json","data","all_users","checkUsername","user_name","db_username","state","that","map","user","index","handleUsername","e","target","value","console","log","register","handleEmail","email","handlePassword","password","handleSubmit","preventDefault","csrftoken","url","method","headers","body","JSON","stringify","login","catch","error"],"sources":["C:/Users/OZCAN/Desktop/frontend/src/pages/Register.jsx"],"sourcesContent":["\r\nimport Alert from '../Alert';\r\n\r\n\r\nimport React from 'react'\r\n\r\nfunction Register() {\r\n\r\n\r\n  const getCookie =(name) => {\r\n    var cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        var cookies = document.cookie.split(';');\r\n        for (var i = 0; i < cookies.length; i++) {\r\n            var cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\n const setAlert = (msg, type) => {\r\n  this.setState({ alert: {msg,type} });\r\n\r\n  setTimeout(() => {\r\n      this.setState({ alert: null });\r\n  }, 3000);\r\n}\r\n\r\n const  getUsername = (username) =>{\r\n  \r\n        fetch('http://127.0.0.1:8000/account/username_check')\r\n        .then(response => response.json())\r\n        .then(data => \r\n\r\n              this.setState({\r\n              all_users: data  \r\n            })\r\n\r\n        )\r\n        this.checkUsername(username)\r\n    }\r\n\r\n   const checkUsername = (username) =>{\r\n      let user_name=username\r\n      let db_username=this.state.all_users\r\n      let that = this\r\n                           \r\n      {db_username.map(function(user, index){\r\n        if(user.username == user_name){\r\n          //console.log(\"burda\")\r\n          that.setAlert('This username is already taken.','danger');\r\n        }\r\n\r\n      })}\r\n\r\n    }\r\n\r\n const  handleUsername = (e) =>{\r\n\r\n  \r\n    var username = e.target.value\r\n\r\n    console.log('Username:', username)\r\n\r\n\r\n    this.setState({\r\n        register:{\r\n        ...this.state.register,\r\n        username:username,\r\n\r\n      }\r\n    })\r\n \r\n    this.getUsername(username)\r\n  }\r\n const  handleEmail =(e)  =>{\r\n\r\n\r\n    var email = e.target.value\r\n\r\n    console.log('Email:', email)\r\n\r\n\r\n    this.setState({\r\n        register:{\r\n        ...this.state.register,\r\n        email:email,\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n const handlePassword = (e)  =>{\r\n\r\n    var password = e.target.value\r\n\r\n    console.log('Password:', password)\r\n\r\n    this.setState({\r\n        register:{\r\n        ...this.state.register,\r\n\r\n        password:password\r\n      }\r\n    })\r\n  \r\n  }\r\n\r\n\r\n const handleSubmit = (e) =>{\r\n    e.preventDefault()\r\n   \r\n    console.log('ITEM:', this.state.register)\r\n\r\n    var csrftoken = this.getCookie('csrftoken')\r\n\r\n    var url = 'http://127.0.0.1:8000/account/register/'\r\n\r\n    fetch(url, {\r\n      method:'POST',\r\n      headers:{\r\n        'Content-type':'application/json',\r\n        'X-CSRFToken':csrftoken,\r\n      },\r\n      body:JSON.stringify(this.state.login)\r\n    }).then((response)  => {\r\n        console.log(response)\r\n        this.setState({\r\n           login:{\r\n          username:'',\r\n          email:'', \r\n          password:'',\r\n\r\n        }\r\n        })\r\n    }).catch(function(error){\r\n      console.log('ERROR:', error)\r\n    })\r\n\r\n  }\r\n  return (\r\n    <>\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3\"></div>\r\n        <div className=\"col-md-6\">\r\n        <h3>Register</h3>\r\n          <form action=\"\" onSubmit={this.handleSubmit}>\r\n            <div className=\"form-group\">\r\n            <label htmlFor=\"id_username\">Username</label>\r\n            <input className=\"form-control \"  onChange={this.handleUsername} type=\"text\" name=\"username\" maxLength=\"150\" autoFocus=\"\"  id=\"id_username\" /> \r\n            < Alert alert= {this.state.alert}/>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n            <label htmlFor=\"id_email\">Email</label>\r\n            <input className=\"form-control\"  onChange={this.handleEmail} type=\"email\" name=\"email\" required=\"\" id=\"id_email\" />\r\n\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n            <label htmlFor=\"id_password\">Password</label>\r\n\r\n            <input className=\"form-control\"  onChange={this.handlePassword} type=\"password\" name=\"password\" required=\"\" id=\"id_password\" />\r\n            </div>\r\n\r\n\r\n            <div className=\"form-group\">\r\n            <button className='btn btn-dark w-100'>Register</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n        \r\n</>\r\n  )\r\n}\r\n\r\nexport default Register\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export class Register extends Component {\r\n//     constructor(props){\r\n//         super(props);\r\n//           this.state = {\r\n//             register:{\r\n//               username:'',\r\n//               email:'',\r\n//               password:'',\r\n//             },\r\n//             all_users:[],\r\n//             alert:null,\r\n    \r\n//           }\r\n    \r\n    \r\n//           this.handlePassword = this.handlePassword.bind(this)\r\n//           this.getUsername = this.getUsername.bind(this)\r\n//           this.checkUsername = this.checkUsername.bind(this)\r\n//           this.handleEmail = this.handleEmail.bind(this)\r\n//           this.handleUsername = this.handleUsername.bind(this)\r\n//           this.handleSubmit = this.handleSubmit.bind(this)\r\n//           this.getCookie = this.getCookie.bind(this)\r\n//           this.setAlert = this.setAlert.bind(this)\r\n    \r\n    \r\n//       };\r\n      \r\n//   getCookie(name) {\r\n//     var cookieValue = null;\r\n//     if (document.cookie && document.cookie !== '') {\r\n//         var cookies = document.cookie.split(';');\r\n//         for (var i = 0; i < cookies.length; i++) {\r\n//             var cookie = cookies[i].trim();\r\n//             // Does this cookie string begin with the name we want?\r\n//             if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n//                 cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n//                 break;\r\n//             }\r\n//         }\r\n//     }\r\n//     return cookieValue;\r\n// }\r\n\r\n// setAlert(msg, type) {\r\n//   this.setState({ alert: {msg,type} });\r\n\r\n//   setTimeout(() => {\r\n//       this.setState({ alert: null });\r\n//   }, 3000);\r\n// }\r\n\r\n//   getUsername(username){\r\n  \r\n//         fetch('http://127.0.0.1:8000/account/username_check')\r\n//         .then(response => response.json())\r\n//         .then(data => \r\n\r\n//               this.setState({\r\n//               all_users: data  \r\n//             })\r\n\r\n//         )\r\n//         this.checkUsername(username)\r\n//     }\r\n\r\n//     checkUsername(username){\r\n//       let user_name=username\r\n//       let db_username=this.state.all_users\r\n//       let that = this\r\n                           \r\n//       {db_username.map(function(user, index){\r\n//         if(user.username == user_name){\r\n//           //console.log(\"burda\")\r\n//           that.setAlert('This username is already taken.','danger');\r\n//         }\r\n\r\n//       })}\r\n\r\n//     }\r\n\r\n//   handleUsername(e){\r\n\r\n  \r\n//     var username = e.target.value\r\n\r\n//     console.log('Username:', username)\r\n\r\n\r\n//     this.setState({\r\n//         register:{\r\n//         ...this.state.register,\r\n//         username:username,\r\n\r\n//       }\r\n//     })\r\n \r\n//     this.getUsername(username)\r\n//   }\r\n//   handleEmail(e){\r\n\r\n\r\n//     var email = e.target.value\r\n\r\n//     console.log('Email:', email)\r\n\r\n\r\n//     this.setState({\r\n//         register:{\r\n//         ...this.state.register,\r\n//         email:email,\r\n\r\n//       }\r\n//     })\r\n//   }\r\n\r\n//   handlePassword(e){\r\n\r\n//     var password = e.target.value\r\n\r\n//     console.log('Password:', password)\r\n\r\n//     this.setState({\r\n//         register:{\r\n//         ...this.state.register,\r\n\r\n//         password:password\r\n//       }\r\n//     })\r\n  \r\n//   }\r\n\r\n\r\n//   handleSubmit(e){\r\n//     e.preventDefault()\r\n   \r\n//     console.log('ITEM:', this.state.register)\r\n\r\n//     var csrftoken = this.getCookie('csrftoken')\r\n\r\n//     var url = 'http://127.0.0.1:8000/account/register/'\r\n\r\n//     fetch(url, {\r\n//       method:'POST',\r\n//       headers:{\r\n//         'Content-type':'application/json',\r\n//         'X-CSRFToken':csrftoken,\r\n//       },\r\n//       body:JSON.stringify(this.state.login)\r\n//     }).then((response)  => {\r\n//         console.log(response)\r\n//         this.setState({\r\n//            login:{\r\n//           username:'',\r\n//           email:'', \r\n//           password:'',\r\n\r\n//         }\r\n//         })\r\n//     }).catch(function(error){\r\n//       console.log('ERROR:', error)\r\n//     })\r\n\r\n//   }\r\n//   render() {\r\n//     return (\r\n//         <>\r\n//         <div className=\"container\">\r\n//           <div className=\"row\">\r\n//             <div className=\"col-md-3\"></div>\r\n//             <div className=\"col-md-6\">\r\n//             <h3>Register</h3>\r\n//               <form action=\"\" onSubmit={this.handleSubmit}>\r\n//                 <div className=\"form-group\">\r\n//                 <label htmlFor=\"id_username\">Username</label>\r\n//                 <input className=\"form-control \"  onChange={this.handleUsername} type=\"text\" name=\"username\" maxLength=\"150\" autoFocus=\"\"  id=\"id_username\" /> \r\n//                 < Alert alert= {this.state.alert}/>\r\n//                 </div>\r\n\r\n//                 <div className=\"form-group\">\r\n//                 <label htmlFor=\"id_email\">Email</label>\r\n//                 <input className=\"form-control\"  onChange={this.handleEmail} type=\"email\" name=\"email\" required=\"\" id=\"id_email\" />\r\n\r\n//                 </div>\r\n\r\n//                 <div className=\"form-group\">\r\n//                 <label htmlFor=\"id_password\">Password</label>\r\n\r\n//                 <input className=\"form-control\"  onChange={this.handlePassword} type=\"password\" name=\"password\" required=\"\" id=\"id_password\" />\r\n//                 </div>\r\n\r\n\r\n//                 <div className=\"form-group\">\r\n//                 <button className='btn btn-dark w-100'>Register</button>\r\n//                 </div>\r\n//               </form>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//           \r\n//   </>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// export default Register"],"mappings":"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},"metadata":{},"sourceType":"module"}